.TH wxAuiPaneInfo 3 "wxErlang 0.99" "" "Erlang Module Definition"
.SH NAME
wxAuiPaneInfo \- See external documentation: wxAuiPaneInfo.
.SH DESCRIPTION
.LP
See external documentation: wxAuiPaneInfo\&.
.SH "DATA TYPES"

.RS 2
.TP 2
.B
\fIwxAuiPaneInfo()\fR\&:

.RS 2
.LP
An object reference, The representation is internal and can be changed without notice\&. It can\&'t be used for comparsion stored on disc or distributed for use on other nodes\&.
.RE
.RE
.SH EXPORTS
.LP
.B
new() -> wxAuiPaneInfo()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
new(C::wxAuiPaneInfo()) -> wxAuiPaneInfo()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
bestSize(This::wxAuiPaneInfo(), Size::{W::integer(), H::integer()}) -> wxAuiPaneInfo()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
bestSize(This::wxAuiPaneInfo(), X::integer(), Y::integer()) -> wxAuiPaneInfo()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
bottom(This::wxAuiPaneInfo()) -> wxAuiPaneInfo()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
bottomDockable(This::wxAuiPaneInfo()) -> wxAuiPaneInfo()
.br
.RS
.LP
Equivalent to \fBbottomDockable(This, [])\fR\&\&.
.RE
.LP
.B
bottomDockable(This::wxAuiPaneInfo(), Options::[Option]) -> wxAuiPaneInfo()
.br
.RS
.TP 3
Types:

Option = {b, bool()}
.br
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
caption(This::wxAuiPaneInfo(), C::string()) -> wxAuiPaneInfo()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
captionVisible(This::wxAuiPaneInfo()) -> wxAuiPaneInfo()
.br
.RS
.LP
Equivalent to \fBcaptionVisible(This, [])\fR\&\&.
.RE
.LP
.B
captionVisible(This::wxAuiPaneInfo(), Options::[Option]) -> wxAuiPaneInfo()
.br
.RS
.TP 3
Types:

Option = {visible, bool()}
.br
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
centre(This::wxAuiPaneInfo()) -> wxAuiPaneInfo()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
centrePane(This::wxAuiPaneInfo()) -> wxAuiPaneInfo()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
closeButton(This::wxAuiPaneInfo()) -> wxAuiPaneInfo()
.br
.RS
.LP
Equivalent to \fBcloseButton(This, [])\fR\&\&.
.RE
.LP
.B
closeButton(This::wxAuiPaneInfo(), Options::[Option]) -> wxAuiPaneInfo()
.br
.RS
.TP 3
Types:

Option = {visible, bool()}
.br
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
defaultPane(This::wxAuiPaneInfo()) -> wxAuiPaneInfo()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
destroyOnClose(This::wxAuiPaneInfo()) -> wxAuiPaneInfo()
.br
.RS
.LP
Equivalent to \fBdestroyOnClose(This, [])\fR\&\&.
.RE
.LP
.B
destroyOnClose(This::wxAuiPaneInfo(), Options::[Option]) -> wxAuiPaneInfo()
.br
.RS
.TP 3
Types:

Option = {b, bool()}
.br
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
direction(This::wxAuiPaneInfo(), Direction::integer()) -> wxAuiPaneInfo()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
dock(This::wxAuiPaneInfo()) -> wxAuiPaneInfo()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
dockable(This::wxAuiPaneInfo()) -> wxAuiPaneInfo()
.br
.RS
.LP
Equivalent to \fBdockable(This, [])\fR\&\&.
.RE
.LP
.B
dockable(This::wxAuiPaneInfo(), Options::[Option]) -> wxAuiPaneInfo()
.br
.RS
.TP 3
Types:

Option = {b, bool()}
.br
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
fixed(This::wxAuiPaneInfo()) -> wxAuiPaneInfo()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
float(This::wxAuiPaneInfo()) -> wxAuiPaneInfo()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
floatable(This::wxAuiPaneInfo()) -> wxAuiPaneInfo()
.br
.RS
.LP
Equivalent to \fBfloatable(This, [])\fR\&\&.
.RE
.LP
.B
floatable(This::wxAuiPaneInfo(), Options::[Option]) -> wxAuiPaneInfo()
.br
.RS
.TP 3
Types:

Option = {b, bool()}
.br
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
floatingPosition(This::wxAuiPaneInfo(), Pos::{X::integer(), Y::integer()}) -> wxAuiPaneInfo()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
floatingPosition(This::wxAuiPaneInfo(), X::integer(), Y::integer()) -> wxAuiPaneInfo()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
floatingSize(This::wxAuiPaneInfo(), Size::{W::integer(), H::integer()}) -> wxAuiPaneInfo()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
floatingSize(This::wxAuiPaneInfo(), X::integer(), Y::integer()) -> wxAuiPaneInfo()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
gripper(This::wxAuiPaneInfo()) -> wxAuiPaneInfo()
.br
.RS
.LP
Equivalent to \fBgripper(This, [])\fR\&\&.
.RE
.LP
.B
gripper(This::wxAuiPaneInfo(), Options::[Option]) -> wxAuiPaneInfo()
.br
.RS
.TP 3
Types:

Option = {visible, bool()}
.br
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
gripperTop(This::wxAuiPaneInfo()) -> wxAuiPaneInfo()
.br
.RS
.LP
Equivalent to \fBgripperTop(This, [])\fR\&\&.
.RE
.LP
.B
gripperTop(This::wxAuiPaneInfo(), Options::[Option]) -> wxAuiPaneInfo()
.br
.RS
.TP 3
Types:

Option = {attop, bool()}
.br
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
hasBorder(This::wxAuiPaneInfo()) -> bool()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
hasCaption(This::wxAuiPaneInfo()) -> bool()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
hasCloseButton(This::wxAuiPaneInfo()) -> bool()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
hasFlag(This::wxAuiPaneInfo(), Flag::integer()) -> bool()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
hasGripper(This::wxAuiPaneInfo()) -> bool()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
hasGripperTop(This::wxAuiPaneInfo()) -> bool()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
hasMaximizeButton(This::wxAuiPaneInfo()) -> bool()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
hasMinimizeButton(This::wxAuiPaneInfo()) -> bool()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
hasPinButton(This::wxAuiPaneInfo()) -> bool()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
hide(This::wxAuiPaneInfo()) -> wxAuiPaneInfo()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
isBottomDockable(This::wxAuiPaneInfo()) -> bool()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
isDocked(This::wxAuiPaneInfo()) -> bool()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
isFixed(This::wxAuiPaneInfo()) -> bool()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
isFloatable(This::wxAuiPaneInfo()) -> bool()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
isFloating(This::wxAuiPaneInfo()) -> bool()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
isLeftDockable(This::wxAuiPaneInfo()) -> bool()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
isMovable(This::wxAuiPaneInfo()) -> bool()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
isOk(This::wxAuiPaneInfo()) -> bool()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
isResizable(This::wxAuiPaneInfo()) -> bool()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
isRightDockable(This::wxAuiPaneInfo()) -> bool()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
isShown(This::wxAuiPaneInfo()) -> bool()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
isToolbar(This::wxAuiPaneInfo()) -> bool()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
isTopDockable(This::wxAuiPaneInfo()) -> bool()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
layer(This::wxAuiPaneInfo(), Layer::integer()) -> wxAuiPaneInfo()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
left(This::wxAuiPaneInfo()) -> wxAuiPaneInfo()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
leftDockable(This::wxAuiPaneInfo()) -> wxAuiPaneInfo()
.br
.RS
.LP
Equivalent to \fBleftDockable(This, [])\fR\&\&.
.RE
.LP
.B
leftDockable(This::wxAuiPaneInfo(), Options::[Option]) -> wxAuiPaneInfo()
.br
.RS
.TP 3
Types:

Option = {b, bool()}
.br
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
maxSize(This::wxAuiPaneInfo(), Size::{W::integer(), H::integer()}) -> wxAuiPaneInfo()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
maxSize(This::wxAuiPaneInfo(), X::integer(), Y::integer()) -> wxAuiPaneInfo()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
maximizeButton(This::wxAuiPaneInfo()) -> wxAuiPaneInfo()
.br
.RS
.LP
Equivalent to \fBmaximizeButton(This, [])\fR\&\&.
.RE
.LP
.B
maximizeButton(This::wxAuiPaneInfo(), Options::[Option]) -> wxAuiPaneInfo()
.br
.RS
.TP 3
Types:

Option = {visible, bool()}
.br
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
minSize(This::wxAuiPaneInfo(), Size::{W::integer(), H::integer()}) -> wxAuiPaneInfo()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
minSize(This::wxAuiPaneInfo(), X::integer(), Y::integer()) -> wxAuiPaneInfo()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
minimizeButton(This::wxAuiPaneInfo()) -> wxAuiPaneInfo()
.br
.RS
.LP
Equivalent to \fBminimizeButton(This, [])\fR\&\&.
.RE
.LP
.B
minimizeButton(This::wxAuiPaneInfo(), Options::[Option]) -> wxAuiPaneInfo()
.br
.RS
.TP 3
Types:

Option = {visible, bool()}
.br
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
movable(This::wxAuiPaneInfo()) -> wxAuiPaneInfo()
.br
.RS
.LP
Equivalent to \fBmovable(This, [])\fR\&\&.
.RE
.LP
.B
movable(This::wxAuiPaneInfo(), Options::[Option]) -> wxAuiPaneInfo()
.br
.RS
.TP 3
Types:

Option = {b, bool()}
.br
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
name(This::wxAuiPaneInfo(), N::string()) -> wxAuiPaneInfo()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
paneBorder(This::wxAuiPaneInfo()) -> wxAuiPaneInfo()
.br
.RS
.LP
Equivalent to \fBpaneBorder(This, [])\fR\&\&.
.RE
.LP
.B
paneBorder(This::wxAuiPaneInfo(), Options::[Option]) -> wxAuiPaneInfo()
.br
.RS
.TP 3
Types:

Option = {visible, bool()}
.br
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
pinButton(This::wxAuiPaneInfo()) -> wxAuiPaneInfo()
.br
.RS
.LP
Equivalent to \fBpinButton(This, [])\fR\&\&.
.RE
.LP
.B
pinButton(This::wxAuiPaneInfo(), Options::[Option]) -> wxAuiPaneInfo()
.br
.RS
.TP 3
Types:

Option = {visible, bool()}
.br
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
position(This::wxAuiPaneInfo(), Pos::integer()) -> wxAuiPaneInfo()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
resizable(This::wxAuiPaneInfo()) -> wxAuiPaneInfo()
.br
.RS
.LP
Equivalent to \fBresizable(This, [])\fR\&\&.
.RE
.LP
.B
resizable(This::wxAuiPaneInfo(), Options::[Option]) -> wxAuiPaneInfo()
.br
.RS
.TP 3
Types:

Option = {resizable, bool()}
.br
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
right(This::wxAuiPaneInfo()) -> wxAuiPaneInfo()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
rightDockable(This::wxAuiPaneInfo()) -> wxAuiPaneInfo()
.br
.RS
.LP
Equivalent to \fBrightDockable(This, [])\fR\&\&.
.RE
.LP
.B
rightDockable(This::wxAuiPaneInfo(), Options::[Option]) -> wxAuiPaneInfo()
.br
.RS
.TP 3
Types:

Option = {b, bool()}
.br
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
row(This::wxAuiPaneInfo(), Row::integer()) -> wxAuiPaneInfo()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
safeSet(This::wxAuiPaneInfo(), Source::wxAuiPaneInfo()) -> ok
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setFlag(This::wxAuiPaneInfo(), Flag::integer(), Option_state::bool()) -> wxAuiPaneInfo()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
show(This::wxAuiPaneInfo()) -> wxAuiPaneInfo()
.br
.RS
.LP
Equivalent to \fBshow(This, [])\fR\&\&.
.RE
.LP
.B
show(This::wxAuiPaneInfo(), Options::[Option]) -> wxAuiPaneInfo()
.br
.RS
.TP 3
Types:

Option = {show, bool()}
.br
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
toolbarPane(This::wxAuiPaneInfo()) -> wxAuiPaneInfo()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
top(This::wxAuiPaneInfo()) -> wxAuiPaneInfo()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
topDockable(This::wxAuiPaneInfo()) -> wxAuiPaneInfo()
.br
.RS
.LP
Equivalent to \fBtopDockable(This, [])\fR\&\&.
.RE
.LP
.B
topDockable(This::wxAuiPaneInfo(), Options::[Option]) -> wxAuiPaneInfo()
.br
.RS
.TP 3
Types:

Option = {b, bool()}
.br
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
window(This::wxAuiPaneInfo(), W::wxWindow() (see module wxWindow)) -> wxAuiPaneInfo()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
destroy(This::wxAuiPaneInfo()) -> ok
.br
.RS
.LP
Destroys this object, do not use object again
.RE
.SH AUTHORS
.LP

.I
<>