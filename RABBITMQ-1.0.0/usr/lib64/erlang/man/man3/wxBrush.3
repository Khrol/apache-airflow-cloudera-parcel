.TH wxBrush 3 "wxErlang 0.99" "" "Erlang Module Definition"
.SH NAME
wxBrush \- See external documentation: wxBrush.
.SH DESCRIPTION
.LP
See external documentation: wxBrush\&.
.SH "DATA TYPES"

.RS 2
.TP 2
.B
\fIwxBrush()\fR\&:

.RS 2
.LP
An object reference, The representation is internal and can be changed without notice\&. It can\&'t be used for comparsion stored on disc or distributed for use on other nodes\&.
.RE
.RE
.SH EXPORTS
.LP
.B
new() -> wxBrush()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
new(X::term()) -> wxBrush()
.br
.RS
.LP
See external documentation\&. 
.br
Alternatives:
.LP
\fI new(Colour::wx:colour()) -> new(Colour, []) \fR\&
.LP
\fI new(StippleBitmap::wxBitmap:wxBitmap()) -> wxBrush() \fR\& 
.RE
.LP
.B
new(Colour::colour() (see module wx), Options::[Option]) -> wxBrush()
.br
.RS
.TP 3
Types:

Option = {style, integer()}
.br
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getColour(This::wxBrush()) -> colour() (see module wx)
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getStipple(This::wxBrush()) -> wxBitmap() (see module wxBitmap)
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getStyle(This::wxBrush()) -> integer()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
isHatch(This::wxBrush()) -> bool()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
isOk(This::wxBrush()) -> bool()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setColour(This::wxBrush(), Col::colour() (see module wx)) -> ok
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setColour(This::wxBrush(), R::integer(), G::integer(), B::integer()) -> ok
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setStipple(This::wxBrush(), Stipple::wxBitmap() (see module wxBitmap)) -> ok
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setStyle(This::wxBrush(), Style::integer()) -> ok
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
destroy(This::wxBrush()) -> ok
.br
.RS
.LP
Destroys this object, do not use object again
.RE
.SH AUTHORS
.LP

.I
<>