.TH wxTopLevelWindow 3 "wxErlang 0.99" "" "Erlang Module Definition"
.SH NAME
wxTopLevelWindow \- See external documentation: wxTopLevelWindow.
.SH DESCRIPTION
.LP
See external documentation: wxTopLevelWindow\&.
.LP
This class is derived (and can use functions) from: 
.br
\fBwxWindow\fR\& 
.br
\fBwxEvtHandler\fR\& 
.SH "DATA TYPES"

.RS 2
.TP 2
.B
\fIwxTopLevelWindow()\fR\&:

.RS 2
.LP
An object reference, The representation is internal and can be changed without notice\&. It can\&'t be used for comparsion stored on disc or distributed for use on other nodes\&.
.RE
.RE
.SH EXPORTS
.LP
.B
getIcon(This::wxTopLevelWindow()) -> wxIcon() (see module wxIcon)
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getIcons(This::wxTopLevelWindow()) -> wxIconBundle() (see module wxIconBundle)
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getTitle(This::wxTopLevelWindow()) -> string()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
isActive(This::wxTopLevelWindow()) -> bool()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
iconize(This::wxTopLevelWindow()) -> ok
.br
.RS
.LP
Equivalent to \fBiconize(This, [])\fR\&\&.
.RE
.LP
.B
iconize(This::wxTopLevelWindow(), Options::[Option]) -> ok
.br
.RS
.TP 3
Types:

Option = {iconize, bool()}
.br
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
isFullScreen(This::wxTopLevelWindow()) -> bool()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
isIconized(This::wxTopLevelWindow()) -> bool()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
isMaximized(This::wxTopLevelWindow()) -> bool()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
maximize(This::wxTopLevelWindow()) -> ok
.br
.RS
.LP
Equivalent to \fBmaximize(This, [])\fR\&\&.
.RE
.LP
.B
maximize(This::wxTopLevelWindow(), Options::[Option]) -> ok
.br
.RS
.TP 3
Types:

Option = {maximize, bool()}
.br
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
requestUserAttention(This::wxTopLevelWindow()) -> ok
.br
.RS
.LP
Equivalent to \fBrequestUserAttention(This, [])\fR\&\&.
.RE
.LP
.B
requestUserAttention(This::wxTopLevelWindow(), Options::[Option]) -> ok
.br
.RS
.TP 3
Types:

Option = {flags, integer()}
.br
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setIcon(This::wxTopLevelWindow(), Icon::wxIcon() (see module wxIcon)) -> ok
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setIcons(This::wxTopLevelWindow(), Icons::wxIconBundle() (see module wxIconBundle)) -> ok
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
centerOnScreen(This::wxTopLevelWindow()) -> ok
.br
.RS
.LP
Equivalent to \fBcenterOnScreen(This, [])\fR\&\&.
.RE
.LP
.B
centerOnScreen(This::wxTopLevelWindow(), Options::[Option]) -> ok
.br
.RS
.TP 3
Types:

Option = {dir, integer()}
.br
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
centreOnScreen(This::wxTopLevelWindow()) -> ok
.br
.RS
.LP
Equivalent to \fBcentreOnScreen(This, [])\fR\&\&.
.RE
.LP
.B
centreOnScreen(This::wxTopLevelWindow(), Options::[Option]) -> ok
.br
.RS
.TP 3
Types:

Option = {dir, integer()}
.br
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setShape(This::wxTopLevelWindow(), Region::wxRegion() (see module wxRegion)) -> bool()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setTitle(This::wxTopLevelWindow(), Title::string()) -> ok
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
showFullScreen(This::wxTopLevelWindow(), Show::bool()) -> bool()
.br
.RS
.LP
Equivalent to \fBshowFullScreen(This, Show, [])\fR\&\&.
.RE
.LP
.B
showFullScreen(This::wxTopLevelWindow(), Show::bool(), Options::[Option]) -> bool()
.br
.RS
.TP 3
Types:

Option = {style, integer()}
.br
.RE
.RS
.LP
See external documentation\&.
.RE
.SH AUTHORS
.LP

.I
<>