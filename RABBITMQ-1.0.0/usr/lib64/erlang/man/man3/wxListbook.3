.TH wxListbook 3 "wxErlang 0.99" "" "Erlang Module Definition"
.SH NAME
wxListbook \- See external documentation: wxListbook.
.SH DESCRIPTION
.LP
See external documentation: wxListbook\&.
.LP
This class is derived (and can use functions) from: 
.br
\fBwxControl\fR\& 
.br
\fBwxWindow\fR\& 
.br
\fBwxEvtHandler\fR\& 
.SH "DATA TYPES"

.RS 2
.TP 2
.B
\fIwxListbook()\fR\&:

.RS 2
.LP
An object reference, The representation is internal and can be changed without notice\&. It can\&'t be used for comparsion stored on disc or distributed for use on other nodes\&.
.RE
.RE
.SH EXPORTS
.LP
.B
new() -> wxListbook()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
new(Parent::wxWindow() (see module wxWindow), Id::integer()) -> wxListbook()
.br
.RS
.LP
Equivalent to \fBnew(Parent, Id, [])\fR\&\&.
.RE
.LP
.B
new(Parent::wxWindow() (see module wxWindow), Id::integer(), Options::[Option]) -> wxListbook()
.br
.RS
.TP 3
Types:

Option = {pos, {X::integer(), Y::integer()}} | {size, {W::integer(), H::integer()}} | {style, integer()}
.br
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
addPage(This::wxListbook(), Page::wxWindow() (see module wxWindow), Text::string()) -> bool()
.br
.RS
.LP
Equivalent to \fBaddPage(This, Page, Text, [])\fR\&\&.
.RE
.LP
.B
addPage(This::wxListbook(), Page::wxWindow() (see module wxWindow), Text::string(), Options::[Option]) -> bool()
.br
.RS
.TP 3
Types:

Option = {bSelect, bool()} | {imageId, integer()}
.br
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
advanceSelection(This::wxListbook()) -> ok
.br
.RS
.LP
Equivalent to \fBadvanceSelection(This, [])\fR\&\&.
.RE
.LP
.B
advanceSelection(This::wxListbook(), Options::[Option]) -> ok
.br
.RS
.TP 3
Types:

Option = {forward, bool()}
.br
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
assignImageList(This::wxListbook(), ImageList::wxImageList() (see module wxImageList)) -> ok
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
create(This::wxListbook(), Parent::wxWindow() (see module wxWindow), Id::integer()) -> bool()
.br
.RS
.LP
Equivalent to \fBcreate(This, Parent, Id, [])\fR\&\&.
.RE
.LP
.B
create(This::wxListbook(), Parent::wxWindow() (see module wxWindow), Id::integer(), Options::[Option]) -> bool()
.br
.RS
.TP 3
Types:

Option = {pos, {X::integer(), Y::integer()}} | {size, {W::integer(), H::integer()}} | {style, integer()}
.br
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
deleteAllPages(This::wxListbook()) -> bool()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
deletePage(This::wxListbook(), N::integer()) -> bool()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
removePage(This::wxListbook(), N::integer()) -> bool()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getCurrentPage(This::wxListbook()) -> wxWindow() (see module wxWindow)
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getImageList(This::wxListbook()) -> wxImageList() (see module wxImageList)
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getPage(This::wxListbook(), N::integer()) -> wxWindow() (see module wxWindow)
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getPageCount(This::wxListbook()) -> integer()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getPageImage(This::wxListbook(), N::integer()) -> integer()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getPageText(This::wxListbook(), N::integer()) -> string()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getSelection(This::wxListbook()) -> integer()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
hitTest(This::wxListbook(), Pt::{X::integer(), Y::integer()}) -> {integer(), Flags::integer()}
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
insertPage(This::wxListbook(), N::integer(), Page::wxWindow() (see module wxWindow), Text::string()) -> bool()
.br
.RS
.LP
Equivalent to \fBinsertPage(This, N, Page, Text, [])\fR\&\&.
.RE
.LP
.B
insertPage(This::wxListbook(), N::integer(), Page::wxWindow() (see module wxWindow), Text::string(), Options::[Option]) -> bool()
.br
.RS
.TP 3
Types:

Option = {bSelect, bool()} | {imageId, integer()}
.br
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setImageList(This::wxListbook(), ImageList::wxImageList() (see module wxImageList)) -> ok
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setPageSize(This::wxListbook(), Size::{W::integer(), H::integer()}) -> ok
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setPageImage(This::wxListbook(), N::integer(), ImageId::integer()) -> bool()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setPageText(This::wxListbook(), N::integer(), StrText::string()) -> bool()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setSelection(This::wxListbook(), N::integer()) -> integer()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
changeSelection(This::wxListbook(), N::integer()) -> integer()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
destroy(This::wxListbook()) -> ok
.br
.RS
.LP
Destroys this object, do not use object again
.RE
.SH AUTHORS
.LP

.I
<>