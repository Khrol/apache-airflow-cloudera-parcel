.TH wxScrolledWindow 3 "wxErlang 0.99" "" "Erlang Module Definition"
.SH NAME
wxScrolledWindow \- See external documentation: wxScrolledWindow.
.SH DESCRIPTION
.LP
See external documentation: wxScrolledWindow\&.
.LP
This class is derived (and can use functions) from: 
.br
\fBwxPanel\fR\& 
.br
\fBwxWindow\fR\& 
.br
\fBwxEvtHandler\fR\& 
.SH "DATA TYPES"

.RS 2
.TP 2
.B
\fIwxScrolledWindow()\fR\&:

.RS 2
.LP
An object reference, The representation is internal and can be changed without notice\&. It can\&'t be used for comparsion stored on disc or distributed for use on other nodes\&.
.RE
.RE
.SH EXPORTS
.LP
.B
new() -> wxScrolledWindow()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
new(Parent::wxWindow() (see module wxWindow)) -> wxScrolledWindow()
.br
.RS
.LP
Equivalent to \fBnew(Parent, [])\fR\&\&.
.RE
.LP
.B
new(Parent::wxWindow() (see module wxWindow), Options::[Option]) -> wxScrolledWindow()
.br
.RS
.TP 3
Types:

Option = {winid, integer()} | {pos, {X::integer(), Y::integer()}} | {size, {W::integer(), H::integer()}} | {style, integer()}
.br
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
calcScrolledPosition(This::wxScrolledWindow(), Pt::{X::integer(), Y::integer()}) -> {X::integer(), Y::integer()}
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
calcScrolledPosition(This::wxScrolledWindow(), X::integer(), Y::integer()) -> {Xx::integer(), Yy::integer()}
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
calcUnscrolledPosition(This::wxScrolledWindow(), Pt::{X::integer(), Y::integer()}) -> {X::integer(), Y::integer()}
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
calcUnscrolledPosition(This::wxScrolledWindow(), X::integer(), Y::integer()) -> {Xx::integer(), Yy::integer()}
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
enableScrolling(This::wxScrolledWindow(), X_scrolling::bool(), Y_scrolling::bool()) -> ok
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getScrollPixelsPerUnit(This::wxScrolledWindow()) -> {PixelsPerUnitX::integer(), PixelsPerUnitY::integer()}
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getViewStart(This::wxScrolledWindow()) -> {X::integer(), Y::integer()}
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
doPrepareDC(This::wxScrolledWindow(), Dc::wxDC() (see module wxDC)) -> ok
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
prepareDC(This::wxScrolledWindow(), Dc::wxDC() (see module wxDC)) -> ok
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
scroll(This::wxScrolledWindow(), X::integer(), Y::integer()) -> ok
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setScrollbars(This::wxScrolledWindow(), PixelsPerUnitX::integer(), PixelsPerUnitY::integer(), NoUnitsX::integer(), NoUnitsY::integer()) -> ok
.br
.RS
.LP
Equivalent to \fBsetScrollbars(This, PixelsPerUnitX, PixelsPerUnitY, NoUnitsX, NoUnitsY, [])\fR\&\&.
.RE
.LP
.B
setScrollbars(This::wxScrolledWindow(), PixelsPerUnitX::integer(), PixelsPerUnitY::integer(), NoUnitsX::integer(), NoUnitsY::integer(), Options::[Option]) -> ok
.br
.RS
.TP 3
Types:

Option = {xPos, integer()} | {yPos, integer()} | {noRefresh, bool()}
.br
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setScrollRate(This::wxScrolledWindow(), Xstep::integer(), Ystep::integer()) -> ok
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setTargetWindow(This::wxScrolledWindow(), Target::wxWindow() (see module wxWindow)) -> ok
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
destroy(This::wxScrolledWindow()) -> ok
.br
.RS
.LP
Destroys this object, do not use object again
.RE
.SH AUTHORS
.LP

.I
<>