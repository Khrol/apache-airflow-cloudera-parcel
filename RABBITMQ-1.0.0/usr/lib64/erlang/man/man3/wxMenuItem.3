.TH wxMenuItem 3 "wxErlang 0.99" "" "Erlang Module Definition"
.SH NAME
wxMenuItem \- See external documentation: wxMenuItem.
.SH DESCRIPTION
.LP
See external documentation: wxMenuItem\&.
.SH "DATA TYPES"

.RS 2
.TP 2
.B
\fIwxMenuItem()\fR\&:

.RS 2
.LP
An object reference, The representation is internal and can be changed without notice\&. It can\&'t be used for comparsion stored on disc or distributed for use on other nodes\&.
.RE
.RE
.SH EXPORTS
.LP
.B
new() -> wxMenuItem()
.br
.RS
.LP
Equivalent to \fBnew([])\fR\&\&.
.RE
.LP
.B
new(Options::[Option]) -> wxMenuItem()
.br
.RS
.TP 3
Types:

Option = {parentMenu, wxMenu() (see module wxMenu)} | {id, integer()} | {text, string()} | {help, string()} | {kind, WxItemKind} | {subMenu, wxMenu() (see module wxMenu)}
.br
WxItemKind = integer()
.br
.RE
.RS
.LP
See external documentation\&. 
.br
WxItemKind is one of ?wxITEM_SEPARATOR | ?wxITEM_NORMAL | ?wxITEM_CHECK | ?wxITEM_RADIO | ?wxITEM_MAX
.RE
.LP
.B
check(This::wxMenuItem()) -> ok
.br
.RS
.LP
Equivalent to \fBcheck(This, [])\fR\&\&.
.RE
.LP
.B
check(This::wxMenuItem(), Options::[Option]) -> ok
.br
.RS
.TP 3
Types:

Option = {check, bool()}
.br
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
enable(This::wxMenuItem()) -> ok
.br
.RS
.LP
Equivalent to \fBenable(This, [])\fR\&\&.
.RE
.LP
.B
enable(This::wxMenuItem(), Options::[Option]) -> ok
.br
.RS
.TP 3
Types:

Option = {enable, bool()}
.br
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getBitmap(This::wxMenuItem()) -> wxBitmap() (see module wxBitmap)
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getHelp(This::wxMenuItem()) -> string()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getId(This::wxMenuItem()) -> integer()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getKind(This::wxMenuItem()) -> WxItemKind
.br
.RS
.TP 3
Types:

WxItemKind = integer()
.br
.RE
.RS
.LP
See external documentation\&. 
.br
WxItemKind is one of ?wxITEM_SEPARATOR | ?wxITEM_NORMAL | ?wxITEM_CHECK | ?wxITEM_RADIO | ?wxITEM_MAX
.RE
.LP
.B
getLabel(This::wxMenuItem()) -> string()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getLabelFromText(Text::string()) -> string()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getMenu(This::wxMenuItem()) -> wxMenu() (see module wxMenu)
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getText(This::wxMenuItem()) -> string()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getSubMenu(This::wxMenuItem()) -> wxMenu() (see module wxMenu)
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
isCheckable(This::wxMenuItem()) -> bool()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
isChecked(This::wxMenuItem()) -> bool()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
isEnabled(This::wxMenuItem()) -> bool()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
isSeparator(This::wxMenuItem()) -> bool()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
isSubMenu(This::wxMenuItem()) -> bool()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setBitmap(This::wxMenuItem(), Bitmap::wxBitmap() (see module wxBitmap)) -> ok
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setHelp(This::wxMenuItem(), Str::string()) -> ok
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setMenu(This::wxMenuItem(), Menu::wxMenu() (see module wxMenu)) -> ok
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setSubMenu(This::wxMenuItem(), Menu::wxMenu() (see module wxMenu)) -> ok
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setText(This::wxMenuItem(), Str::string()) -> ok
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
destroy(This::wxMenuItem()) -> ok
.br
.RS
.LP
Destroys this object, do not use object again
.RE
.SH AUTHORS
.LP

.I
<>