.TH wxMouseEvent 3 "wxErlang 0.99" "" "Erlang Module Definition"
.SH NAME
wxMouseEvent \- See external documentation: wxMouseEvent.
.SH DESCRIPTION
.LP
See external documentation: wxMouseEvent\&.
.RS 2
.TP 2
.B
Use \fBwxEvtHandler:connect/3\fR\& with EventType::
\fIleft_down\fR\&, \fIleft_up\fR\&, \fImiddle_down\fR\&, \fImiddle_up\fR\&, \fIright_down\fR\&, \fIright_up\fR\&, \fImotion\fR\&, \fIenter_window\fR\&, \fIleave_window\fR\&, \fIleft_dclick\fR\&, \fImiddle_dclick\fR\&, \fIright_dclick\fR\&, \fImousewheel\fR\&, \fInc_left_down\fR\&, \fInc_left_up\fR\&, \fInc_middle_down\fR\&, \fInc_middle_up\fR\&, \fInc_right_down\fR\&, \fInc_right_up\fR\&, \fInc_motion\fR\&, \fInc_enter_window\fR\&, \fInc_leave_window\fR\&, \fInc_left_dclick\fR\&, \fInc_middle_dclick\fR\&, \fInc_right_dclick\fR\&
.RE
.LP
See also the message variant \fB#wxMouse{\fR\&} event record type\&.
.LP
This class is derived (and can use functions) from: 
.br
\fBwxEvent\fR\& 
.SH "DATA TYPES"

.RS 2
.TP 2
.B
\fIwxMouseEvent()\fR\&:

.RS 2
.LP
An object reference, The representation is internal and can be changed without notice\&. It can\&'t be used for comparsion stored on disc or distributed for use on other nodes\&.
.RE
.RE
.SH EXPORTS
.LP
.B
altDown(This::wxMouseEvent()) -> bool()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
button(This::wxMouseEvent(), But::integer()) -> bool()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
buttonDClick(This::wxMouseEvent()) -> bool()
.br
.RS
.LP
Equivalent to \fBbuttonDClick(This, [])\fR\&\&.
.RE
.LP
.B
buttonDClick(This::wxMouseEvent(), Options::[Option]) -> bool()
.br
.RS
.TP 3
Types:

Option = {but, integer()}
.br
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
buttonDown(This::wxMouseEvent()) -> bool()
.br
.RS
.LP
Equivalent to \fBbuttonDown(This, [])\fR\&\&.
.RE
.LP
.B
buttonDown(This::wxMouseEvent(), Options::[Option]) -> bool()
.br
.RS
.TP 3
Types:

Option = {but, integer()}
.br
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
buttonUp(This::wxMouseEvent()) -> bool()
.br
.RS
.LP
Equivalent to \fBbuttonUp(This, [])\fR\&\&.
.RE
.LP
.B
buttonUp(This::wxMouseEvent(), Options::[Option]) -> bool()
.br
.RS
.TP 3
Types:

Option = {but, integer()}
.br
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
cmdDown(This::wxMouseEvent()) -> bool()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
controlDown(This::wxMouseEvent()) -> bool()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
dragging(This::wxMouseEvent()) -> bool()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
entering(This::wxMouseEvent()) -> bool()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getButton(This::wxMouseEvent()) -> integer()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getPosition(This::wxMouseEvent()) -> {X::integer(), Y::integer()}
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getLogicalPosition(This::wxMouseEvent(), Dc::wxDC() (see module wxDC)) -> {X::integer(), Y::integer()}
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getLinesPerAction(This::wxMouseEvent()) -> integer()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getWheelRotation(This::wxMouseEvent()) -> integer()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getWheelDelta(This::wxMouseEvent()) -> integer()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getX(This::wxMouseEvent()) -> integer()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getY(This::wxMouseEvent()) -> integer()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
isButton(This::wxMouseEvent()) -> bool()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
isPageScroll(This::wxMouseEvent()) -> bool()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
leaving(This::wxMouseEvent()) -> bool()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
leftDClick(This::wxMouseEvent()) -> bool()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
leftDown(This::wxMouseEvent()) -> bool()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
leftIsDown(This::wxMouseEvent()) -> bool()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
leftUp(This::wxMouseEvent()) -> bool()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
metaDown(This::wxMouseEvent()) -> bool()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
middleDClick(This::wxMouseEvent()) -> bool()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
middleDown(This::wxMouseEvent()) -> bool()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
middleIsDown(This::wxMouseEvent()) -> bool()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
middleUp(This::wxMouseEvent()) -> bool()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
moving(This::wxMouseEvent()) -> bool()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
rightDClick(This::wxMouseEvent()) -> bool()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
rightDown(This::wxMouseEvent()) -> bool()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
rightIsDown(This::wxMouseEvent()) -> bool()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
rightUp(This::wxMouseEvent()) -> bool()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
shiftDown(This::wxMouseEvent()) -> bool()
.br
.RS
.LP
See external documentation\&.
.RE
.SH AUTHORS
.LP

.I
<>