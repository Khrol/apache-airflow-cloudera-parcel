.TH inviso_rt_meta 3 "inviso 0.6.2" "Ericsson AB" "Erlang Module Definition"
.SH NAME
inviso_rt_meta \- Direct API to the Inviso Runtime Component's meta tracer
.SH DESCRIPTION
.LP
This module provides a direct API to the inviso meta tracer\&. These functions are only meant to be used in meta tracing \fICallFunc\fR\& and \fIRemoveFunc\fR\&\&.
.LP
It can sometimes be necessary to manipulate meta match-patterns from \fICallFunc\fR\&s and \fIRemoveFunc\fR\&s\&. The problem then is that call-funcs and remove-funcs are meta trace call-backs executed inside the inviso meta tracer\&'s context\&. Hence making calls to the regular API\&'s manipulating meta trace-patterns will hang the inviso meta tracer!\&.
.LP
To remedy this problem, a number of useful tpm-functions are available in this API\&. It must be understood that their actions are local to the Erlang node where they are called\&.
.SH EXPORTS
.LP
.B
tpm_ms(Mod,Func,Arity,MSname,MS) -> {ok,0} | {ok,1} | {error,not_initiated}
.br
.RS
.LP
See inviso:tpm_ms/6 for details\&. Note that this function only effects meta trace-patterns on the Erlang node where the function is called\&. This also implies that only the local inviso meta tracer\&'s name-database is updated with \fIMSname\fR\&\&.
.RE
.LP
.B
tpm_ms_tracer(Mod,Func,Arity,MSname,MS) -> {ok,0} | {ok,1} | {error,not_initiated}
.br
.RS
.LP
See inviso:tpm_ms_ms/6 for details\&. Note that this function only effects meta trace-patterns on the Erlang node where the function is called\&. This also implies that only the local inviso meta tracer\&'s name-database is updated with \fIMSname\fR\&\&.
.RE
.LP
.B
list_tpm_ms(Mod,Func,Arity) -> [MSname]
.br
.RS
.LP
Returns a list of all \fIMSname\fR\& in use for \fIMod:Func/Arity\fR\&\&. This can be useful instead of having to have an own-implemented database over currently in use meta match-functions for a particular function\&.
.RE
.LP
.B
ctpm_ms(Mod,Func,Arity,MSname) -> ok
.br
.RS
.LP
See inviso:ctpm_ms/5 for details\&. Note that this function only effects meta trace-patterns on the Erlang node where the function is called\&. This also implies that only the local inviso meta tracer\&'s name-database is updated with \fIMSname\fR\&\&.
.RE
.LP
.B
get_tracer() -> Tracer
.br
.RS
.TP 3
Types:

Tracer = pid() | port()
.br
.RE
.RS
.LP
Returns the pid or port acting as the receiver of regular trace messages\&. This is useful if it is necessary to manipulate meta trace-patterns by hand (using \fIerlang:trace_pattern/3\fR\&) and the \fI{tracer,Tracer}\fR\& must be used in one of the match-function bodies\&.
.RE