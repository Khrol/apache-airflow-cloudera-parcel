.TH wxMenu 3 "wxErlang 0.99" "" "Erlang Module Definition"
.SH NAME
wxMenu \- See external documentation: wxMenu.
.SH DESCRIPTION
.LP
See external documentation: wxMenu\&.
.LP
This class is derived (and can use functions) from: 
.br
\fBwxEvtHandler\fR\& 
.SH "DATA TYPES"

.RS 2
.TP 2
.B
\fIwxMenu()\fR\&:

.RS 2
.LP
An object reference, The representation is internal and can be changed without notice\&. It can\&'t be used for comparsion stored on disc or distributed for use on other nodes\&.
.RE
.RE
.SH EXPORTS
.LP
.B
new() -> wxMenu()
.br
.RS
.LP
Equivalent to \fBnew([])\fR\&\&.
.RE
.LP
.B
new(Options::[Option]) -> wxMenu()
.br
.RS
.TP 3
Types:

Option = {style, integer()}
.br
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
new(Title::string(), Options::[Option]) -> wxMenu()
.br
.RS
.TP 3
Types:

Option = {style, integer()}
.br
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
append(This::wxMenu(), Item::wxMenuItem() (see module wxMenuItem)) -> wxMenuItem() (see module wxMenuItem)
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
append(This::wxMenu(), Itemid::integer(), Text::string()) -> wxMenuItem() (see module wxMenuItem)
.br
.RS
.LP
Equivalent to \fBappend(This, Itemid, Text, [])\fR\&\&.
.RE
.LP
.B
append(This::wxMenu(), Itemid::integer(), Text::string(), X::wxMenu() | term()) -> wxMenuItem() (see module wxMenuItem)
.br
.RS
.LP
See external documentation\&. 
.br
Alternatives:
.LP
\fI append(This::wxMenu(), Itemid::integer(), Text::string(), Submenu::wxMenu()) -> append(This,Itemid,Text,Submenu, []) \fR\&
.LP
\fI append(This::wxMenu(), Itemid::integer(), Text::string(), [Option]) -> wxMenuItem:wxMenuItem() \fR\& 
.br
Option = {help, string()} | {kind, WxItemKind} 
.br
WxItemKind = integer() 
.br
WxItemKind is one of ?wxITEM_SEPARATOR | ?wxITEM_NORMAL | ?wxITEM_CHECK | ?wxITEM_RADIO | ?wxITEM_MAX
.RE
.LP
.B
append(This::wxMenu(), Itemid::integer(), Text::string(), X::string() | wxMenu(), X::bool() | term()) -> ok | wxMenuItem() (see module wxMenuItem)
.br
.RS
.LP
See external documentation\&. 
.br
Alternatives:
.LP
\fI append(This::wxMenu(), Itemid::integer(), Text::string(), Help::string(), IsCheckable::bool()) -> ok \fR\& 
.LP
\fI append(This::wxMenu(), Itemid::integer(), Text::string(), Submenu::wxMenu(), [Option]) -> wxMenuItem:wxMenuItem() \fR\& 
.br
Option = {help, string()}
.RE
.LP
.B
appendCheckItem(This::wxMenu(), Itemid::integer(), Text::string()) -> wxMenuItem() (see module wxMenuItem)
.br
.RS
.LP
Equivalent to \fBappendCheckItem(This, Itemid, Text, [])\fR\&\&.
.RE
.LP
.B
appendCheckItem(This::wxMenu(), Itemid::integer(), Text::string(), Options::[Option]) -> wxMenuItem() (see module wxMenuItem)
.br
.RS
.TP 3
Types:

Option = {help, string()}
.br
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
appendRadioItem(This::wxMenu(), Itemid::integer(), Text::string()) -> wxMenuItem() (see module wxMenuItem)
.br
.RS
.LP
Equivalent to \fBappendRadioItem(This, Itemid, Text, [])\fR\&\&.
.RE
.LP
.B
appendRadioItem(This::wxMenu(), Itemid::integer(), Text::string(), Options::[Option]) -> wxMenuItem() (see module wxMenuItem)
.br
.RS
.TP 3
Types:

Option = {help, string()}
.br
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
appendSeparator(This::wxMenu()) -> wxMenuItem() (see module wxMenuItem)
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
break(This::wxMenu()) -> ok
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
check(This::wxMenu(), Itemid::integer(), Check::bool()) -> ok
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
delete(This::wxMenu(), X::integer() | term()) -> bool()
.br
.RS
.LP
See external documentation\&. 
.br
Alternatives:
.LP
\fI delete(This::wxMenu(), Itemid::integer()) -> bool() \fR\& 
.LP
\fI delete(This::wxMenu(), Item::wxMenuItem:wxMenuItem()) -> bool() \fR\& 
.RE
.LP
.B
Destroy(This::wxMenu(), X::integer() | term()) -> bool()
.br
.RS
.LP
See external documentation\&. 
.br
Alternatives:
.LP
\fI \&'Destroy\&'(This::wxMenu(), Itemid::integer()) -> bool() \fR\& 
.LP
\fI \&'Destroy\&'(This::wxMenu(), Item::wxMenuItem:wxMenuItem()) -> bool() \fR\& 
.RE
.LP
.B
enable(This::wxMenu(), Itemid::integer(), Enable::bool()) -> ok
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
findItem(This::wxMenu(), X::integer() | string()) -> wxMenuItem() (see module wxMenuItem) | integer()
.br
.RS
.LP
See external documentation\&. 
.br
Alternatives:
.LP
\fI findItem(This::wxMenu(), Itemid::integer()) -> wxMenuItem:wxMenuItem() \fR\& 
.LP
\fI findItem(This::wxMenu(), Item::string()) -> integer() \fR\& 
.RE
.LP
.B
findItemByPosition(This::wxMenu(), Position::integer()) -> wxMenuItem() (see module wxMenuItem)
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getHelpString(This::wxMenu(), Itemid::integer()) -> string()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getLabel(This::wxMenu(), Itemid::integer()) -> string()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getMenuItemCount(This::wxMenu()) -> integer()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getMenuItems(This::wxMenu()) -> [wxMenuItem() (see module wxMenuItem)]
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getTitle(This::wxMenu()) -> string()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
insert(This::wxMenu(), Pos::integer(), X::integer() | term()) -> wxMenuItem() (see module wxMenuItem)
.br
.RS
.LP
See external documentation\&. 
.br
Alternatives:
.LP
\fI insert(This::wxMenu(), Pos::integer(), Itemid::integer()) -> insert(This,Pos,Itemid, []) \fR\&
.LP
\fI insert(This::wxMenu(), Pos::integer(), Item::wxMenuItem:wxMenuItem()) -> wxMenuItem:wxMenuItem() \fR\& 
.RE
.LP
.B
insert(This::wxMenu(), Pos::integer(), Itemid::integer(), Options::[Option]) -> wxMenuItem() (see module wxMenuItem)
.br
.RS
.TP 3
Types:

Option = {text, string()} | {help, string()} | {kind, WxItemKind}
.br
WxItemKind = integer()
.br
.RE
.RS
.LP
See external documentation\&. 
.br
WxItemKind is one of ?wxITEM_SEPARATOR | ?wxITEM_NORMAL | ?wxITEM_CHECK | ?wxITEM_RADIO | ?wxITEM_MAX
.RE
.LP
.B
insert(This::wxMenu(), Pos::integer(), Itemid::integer(), Text::string(), Submenu::wxMenu()) -> wxMenuItem() (see module wxMenuItem)
.br
.RS
.LP
Equivalent to \fBinsert(This, Pos, Itemid, Text, Submenu, [])\fR\&\&.
.RE
.LP
.B
insert(This::wxMenu(), Pos::integer(), Itemid::integer(), Text::string(), X::string() | wxMenu(), X::bool() | term()) -> ok | wxMenuItem() (see module wxMenuItem)
.br
.RS
.LP
See external documentation\&. 
.br
Alternatives:
.LP
\fI insert(This::wxMenu(), Pos::integer(), Itemid::integer(), Text::string(), Help::string(), IsCheckable::bool()) -> ok \fR\& 
.LP
\fI insert(This::wxMenu(), Pos::integer(), Itemid::integer(), Text::string(), Submenu::wxMenu(), [Option]) -> wxMenuItem:wxMenuItem() \fR\& 
.br
Option = {help, string()}
.RE
.LP
.B
insertCheckItem(This::wxMenu(), Pos::integer(), Itemid::integer(), Text::string()) -> wxMenuItem() (see module wxMenuItem)
.br
.RS
.LP
Equivalent to \fBinsertCheckItem(This, Pos, Itemid, Text, [])\fR\&\&.
.RE
.LP
.B
insertCheckItem(This::wxMenu(), Pos::integer(), Itemid::integer(), Text::string(), Options::[Option]) -> wxMenuItem() (see module wxMenuItem)
.br
.RS
.TP 3
Types:

Option = {help, string()}
.br
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
insertRadioItem(This::wxMenu(), Pos::integer(), Itemid::integer(), Text::string()) -> wxMenuItem() (see module wxMenuItem)
.br
.RS
.LP
Equivalent to \fBinsertRadioItem(This, Pos, Itemid, Text, [])\fR\&\&.
.RE
.LP
.B
insertRadioItem(This::wxMenu(), Pos::integer(), Itemid::integer(), Text::string(), Options::[Option]) -> wxMenuItem() (see module wxMenuItem)
.br
.RS
.TP 3
Types:

Option = {help, string()}
.br
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
insertSeparator(This::wxMenu(), Pos::integer()) -> wxMenuItem() (see module wxMenuItem)
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
isChecked(This::wxMenu(), Itemid::integer()) -> bool()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
isEnabled(This::wxMenu(), Itemid::integer()) -> bool()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
prepend(This::wxMenu(), X::integer() | term()) -> wxMenuItem() (see module wxMenuItem)
.br
.RS
.LP
See external documentation\&. 
.br
Alternatives:
.LP
\fI prepend(This::wxMenu(), Itemid::integer()) -> prepend(This,Itemid, []) \fR\&
.LP
\fI prepend(This::wxMenu(), Item::wxMenuItem:wxMenuItem()) -> wxMenuItem:wxMenuItem() \fR\& 
.RE
.LP
.B
prepend(This::wxMenu(), Itemid::integer(), Options::[Option]) -> wxMenuItem() (see module wxMenuItem)
.br
.RS
.TP 3
Types:

Option = {text, string()} | {help, string()} | {kind, WxItemKind}
.br
WxItemKind = integer()
.br
.RE
.RS
.LP
See external documentation\&. 
.br
WxItemKind is one of ?wxITEM_SEPARATOR | ?wxITEM_NORMAL | ?wxITEM_CHECK | ?wxITEM_RADIO | ?wxITEM_MAX
.RE
.LP
.B
prepend(This::wxMenu(), Itemid::integer(), Text::string(), Submenu::wxMenu()) -> wxMenuItem() (see module wxMenuItem)
.br
.RS
.LP
Equivalent to \fBprepend(This, Itemid, Text, Submenu, [])\fR\&\&.
.RE
.LP
.B
prepend(This::wxMenu(), Itemid::integer(), Text::string(), X::string() | wxMenu(), X::bool() | term()) -> ok | wxMenuItem() (see module wxMenuItem)
.br
.RS
.LP
See external documentation\&. 
.br
Alternatives:
.LP
\fI prepend(This::wxMenu(), Itemid::integer(), Text::string(), Help::string(), IsCheckable::bool()) -> ok \fR\& 
.LP
\fI prepend(This::wxMenu(), Itemid::integer(), Text::string(), Submenu::wxMenu(), [Option]) -> wxMenuItem:wxMenuItem() \fR\& 
.br
Option = {help, string()}
.RE
.LP
.B
prependCheckItem(This::wxMenu(), Itemid::integer(), Text::string()) -> wxMenuItem() (see module wxMenuItem)
.br
.RS
.LP
Equivalent to \fBprependCheckItem(This, Itemid, Text, [])\fR\&\&.
.RE
.LP
.B
prependCheckItem(This::wxMenu(), Itemid::integer(), Text::string(), Options::[Option]) -> wxMenuItem() (see module wxMenuItem)
.br
.RS
.TP 3
Types:

Option = {help, string()}
.br
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
prependRadioItem(This::wxMenu(), Itemid::integer(), Text::string()) -> wxMenuItem() (see module wxMenuItem)
.br
.RS
.LP
Equivalent to \fBprependRadioItem(This, Itemid, Text, [])\fR\&\&.
.RE
.LP
.B
prependRadioItem(This::wxMenu(), Itemid::integer(), Text::string(), Options::[Option]) -> wxMenuItem() (see module wxMenuItem)
.br
.RS
.TP 3
Types:

Option = {help, string()}
.br
.RE
.RS
.LP
See external documentation\&.
.RE
.LP
.B
prependSeparator(This::wxMenu()) -> wxMenuItem() (see module wxMenuItem)
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
remove(This::wxMenu(), X::integer() | term()) -> wxMenuItem() (see module wxMenuItem)
.br
.RS
.LP
See external documentation\&. 
.br
Alternatives:
.LP
\fI remove(This::wxMenu(), Itemid::integer()) -> wxMenuItem:wxMenuItem() \fR\& 
.LP
\fI remove(This::wxMenu(), Item::wxMenuItem:wxMenuItem()) -> wxMenuItem:wxMenuItem() \fR\& 
.RE
.LP
.B
setHelpString(This::wxMenu(), Itemid::integer(), HelpString::string()) -> ok
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setLabel(This::wxMenu(), Itemid::integer(), Label::string()) -> ok
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
setTitle(This::wxMenu(), Title::string()) -> ok
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
destroy(This::wxMenu()) -> ok
.br
.RS
.LP
Destroys this object, do not use object again
.RE
.SH AUTHORS
.LP

.I
<>