.TH wxPalette 3 "wxErlang 0.99" "" "Erlang Module Definition"
.SH NAME
wxPalette \- See external documentation: wxPalette.
.SH DESCRIPTION
.LP
See external documentation: wxPalette\&.
.SH "DATA TYPES"

.RS 2
.TP 2
.B
\fIwxPalette()\fR\&:

.RS 2
.LP
An object reference, The representation is internal and can be changed without notice\&. It can\&'t be used for comparsion stored on disc or distributed for use on other nodes\&.
.RE
.RE
.SH EXPORTS
.LP
.B
new() -> wxPalette()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
new(Red::binary(), Green::binary(), Blue::binary()) -> wxPalette()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
create(This::wxPalette(), Red::binary(), Green::binary(), Blue::binary()) -> bool()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getColoursCount(This::wxPalette()) -> integer()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getPixel(This::wxPalette(), Red::integer(), Green::integer(), Blue::integer()) -> integer()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
getRGB(This::wxPalette(), Pixel::integer()) -> {bool(), Red::integer(), Green::integer(), Blue::integer()}
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
isOk(This::wxPalette()) -> bool()
.br
.RS
.LP
See external documentation\&.
.RE
.LP
.B
destroy(This::wxPalette()) -> ok
.br
.RS
.LP
Destroys this object, do not use object again
.RE
.SH AUTHORS
.LP

.I
<>