.TH crypto 7 "crypto 2.0.4" "Ericsson AB" "Erlang Application Definition"
.SH NAME
crypto \- The Crypto Application
.SH DESCRIPTION
.LP
The purpose of the Crypto application is to provide message digest and DES encryption for SMNPv3\&. It provides computation of message digests MD5 and SHA, and CBC-DES encryption and decryption\&.
.LP

.SH "CONFIGURATION"

.LP
The following environment configuration parameters are defined for the Crypto application\&. Refer to application(3) for more information about configuration parameters\&.
.RS 2
.TP 2
.B
\fIdebug = true | false <optional>\fR\&:
Causes debug information to be written to standard error or standard output\&. Default is \fIfalse\fR\&\&.
.RE
.SH "OPENSSL LIBRARIES"

.LP
The current implementation of the Erlang Crypto application is based on the \fIOpenSSL\fR\& package version 0\&.9\&.7 or higher\&. There are source and binary releases on the web\&.
.LP
Source releases of OpenSSL can be downloaded from the OpenSSL project home page, or mirror sites listed there\&.
.LP
The same URL also contains links to some compiled binaries and libraries of OpenSSL (see the \fIRelated/Binaries\fR\& menu) of which the Shining Light Productions Win32 and OpenSSL pages are of interest for the Win32 user\&.
.LP
For some Unix flavours there are binary packages available on the net\&.
.LP
If you cannot find a suitable binary OpenSSL package, you have to fetch an OpenSSL source release and compile it\&.
.LP
You then have to compile and install the library \fIlibcrypto\&.so\fR\& (Unix), or the library \fIlibeay32\&.dll\fR\& (Win32)\&.
.LP
For Unix The \fIcrypto_drv\fR\& dynamic driver is delivered linked to OpenSSL libraries in \fI/usr/local/lib\fR\&, but the default dynamic linking will also accept libraries in \fI/lib\fR\& and \fI/usr/lib\fR\&\&.
.LP
If that is not applicable to the particular Unix operating system used, the example \fIMakefile\fR\& in the Crypto \fIpriv/obj\fR\& directory, should be used as a basis for relinking the final version of the port program\&.
.LP
For \fIWin32\fR\& it is only required that the library can be found from the \fIPATH\fR\& environment variable, or that they reside in the appropriate \fISYSTEM32\fR\& directory; hence no particular relinking is need\&. Hence no example \fIMakefile\fR\& for Win32 is provided\&.
.SH "SEE ALSO"

.LP
application(3)